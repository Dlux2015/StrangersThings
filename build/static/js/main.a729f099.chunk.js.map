{"version":3,"sources":["Home.js","Navbar.js","Posts.js","Register.js","NewPost.js","ToEdit.js","Login.js","Profile.js","Messages.js","SinglePost.js","App.js","index.js"],"names":["Home","id","Navbar","user","setToken","setUser","lstoken","to","onClick","localStorage","removeItem","username","Posts","posts","setPosts","refreshPosts","token","useHistory","useState","searchTerm","setsearchTerm","filteredPosts","setFilteredPosts","handleChange","e","preventDefault","target","value","filteredResults","filter","post","description","includes","title","price","location","getItem","type","placeholder","onChange","map","_id","willDeliver","Register","setUsername","password","setPassword","confirm","setConfirm","error","setError","history","handleRegister","a","fetch","API_URL","method","headers","body","JSON","stringify","resp","json","info","console","log","message","data","setItem","push","onSubmit","minLength","required","NewPost","setTitle","setDescription","setPrice","setLocation","setWillDeliver","handleSubmit","Authorization","response","PostEdit","useParams","origPost","setPost","handleSubmitEdit","className","Login","event","Profile","useEffect","handleSubmitDelete","messages","length","fromUser","content","active","MessageForm","find","setContent","PostSingle","isAuthor","author","App","userPost","setUserPost","setRefreshPost","fetchUser","lsToken","success","fetchPosts","exact","path","app","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.a729f099.chunk.js","sourcesContent":["const Home = () => {\r\n  return (\r\n    <>\r\n      <body id=\"home-background\">\r\n        <h1 id=\"home\">Welcome to Stranger's things</h1>\r\n      </body>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = ({ user, setToken, setUser, lstoken }) => {\r\n  if (lstoken !== null) {\r\n    //   Logged In\r\n    return (\r\n      <>\r\n        <section id=\"Navbar\">\r\n          <h1 id=\"Nav-title\"> Stranger's Things</h1>\r\n          <Link id=\"header-link\" to=\"/\">\r\n            {\" \"}\r\n            Home\r\n          </Link>\r\n          <Link id=\"header-link\" to=\"/Posts\">\r\n            {\" \"}\r\n            Posts\r\n          </Link>\r\n          <Link id=\"header-link\" to=\"/Profile\">\r\n            {\" \"}\r\n            Profile\r\n          </Link>\r\n          <Link\r\n            id=\"header-link\"\r\n            to=\"/\"\r\n            onClick={() => {\r\n              setToken(\"\");\r\n              setUser([]);\r\n              localStorage.removeItem(\"token\");\r\n            }}\r\n          >\r\n            Log Out\r\n          </Link>\r\n          <div id=\"Nav-user\">\r\n            {user && <span>Welcome {user.username}</span>}\r\n          </div>\r\n        </section>\r\n      </>\r\n    );\r\n  } else {\r\n    //   Logged Out\r\n    return (\r\n      <>\r\n        <section id=\"Navbar\">\r\n          <h1 id=\"Nav-title\"> Stranger's Things</h1>\r\n          <Link id=\"header-link\" to=\"/\">\r\n            {\" \"}\r\n            Home\r\n          </Link>\r\n          <Link id=\"header-link\" to=\"/Posts\">\r\n            {\" \"}\r\n            Posts\r\n          </Link>\r\n          <Link id=\"header-link\" to=\"/Register\">\r\n            {\" \"}\r\n            Register\r\n          </Link>\r\n\r\n          <Link id=\"header-link\" to=\"/Login\">\r\n            {\" \"}\r\n            Login\r\n          </Link>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nconst Posts = ({ posts, setPosts, refreshPosts, token }) => {\r\n  const history = useHistory();\r\n  const [searchTerm, setsearchTerm] = useState(\"\");\r\n  const [filteredPosts, setFilteredPosts] = useState([]);\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setsearchTerm(e.target.value);\r\n    const filteredResults = refreshPosts.filter((post) => {\r\n      return (\r\n        post.description.includes(e.target.value) ||\r\n        post.title.includes(e.target.value) ||\r\n        post.price.includes(e.target.value) ||\r\n        post.location.includes(e.target.value)\r\n      );\r\n    });\r\n    setFilteredPosts(filteredResults);\r\n  };\r\n  if (localStorage.getItem(\"token\") !== null) {\r\n    return (\r\n      <>\r\n        {/* <body id=\"post-main\"> */}\r\n        <div id=\"beforepost\">\r\n          <h1 id=\"post-header-1\">Posts</h1>\r\n          <form id=\"search-1\">\r\n            <input\r\n              id=\"search-form-1\"\r\n              type=\"text\"\r\n              placeholder=\"Search Posts\"\r\n              value={searchTerm}\r\n              onChange={handleChange}\r\n            />\r\n          </form>\r\n          <button\r\n            onClick={() => {\r\n              setPosts(filteredPosts);\r\n            }}\r\n          >\r\n            Search!\r\n          </button>\r\n          <Link id=\"new-post\" to=\"/newpost\">\r\n            <button>NewPost</button>\r\n          </Link>\r\n        </div>\r\n        {posts.map((post) => (\r\n          <div id=\"user-posts\" key={post._id}>\r\n            <Link to={`/posts/${post._id}`}>\r\n              <h2>{post.title}</h2>{\" \"}\r\n            </Link>\r\n            <p>{post.description}</p>\r\n            <h3>{post.price}</h3>\r\n            <h3>{post.location}</h3>\r\n            <h3>{post.willDeliver}</h3>\r\n\r\n            <hr></hr>\r\n          </div>\r\n        ))}\r\n        {/* </body> */}\r\n      </>\r\n    );\r\n  }\r\n\r\n  //Logged Out\r\n  else\r\n    return (\r\n      <>\r\n        {\" \"}\r\n        {/* <body id=\"post-main\"> */}\r\n        <div id=\"beforepost\">\r\n          <h1 id=\"post-header\">Posts</h1>\r\n          <div>\r\n            <form id=\"search\">\r\n              <input\r\n                id=\"search-form\"\r\n                type=\"text\"\r\n                placeholder=\"Search Posts\"\r\n                value={searchTerm}\r\n                onChange={handleChange}\r\n              />\r\n              <button\r\n                onClick={() => {\r\n                  setPosts(filteredPosts);\r\n                }}\r\n              >\r\n                Search!\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        {posts.map((post) => (\r\n          <div id=\"user-posts\" key={post._id}>\r\n            <h2>{post.title}</h2>\r\n            <p>{post.description}</p>\r\n            <h3>{post.price}</h3>\r\n            <h3>{post.location}</h3>\r\n            <h3>{post.willDeliver}</h3>\r\n\r\n            <hr></hr>\r\n          </div>\r\n        ))}\r\n        {/* </body> */}\r\n      </>\r\n    );\r\n};\r\n\r\nexport default Posts;\r\n","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { API_URL } from \"./App\";\r\n\r\nconst Register = ({ setToken }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    if (password !== confirm) {\r\n      setError(\"confirm password does not match original password\");\r\n      return;\r\n    }\r\n    //Submits register to server\r\n    const resp = await fetch(`${API_URL}/users/register`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        user: {\r\n          username,\r\n          password,\r\n        },\r\n      }),\r\n    });\r\n    const info = await resp.json();\r\n    console.log(info);\r\n\r\n    if (info.error) {\r\n      return setError(info.error.message);\r\n    }\r\n    setToken(info.data.token);\r\n    localStorage.setItem(\"token\", info.data.token);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form id=\"register\" onSubmit={handleRegister}>\r\n        <h1 id=\"register-header\">Register</h1>\r\n        <div>\r\n          <input\r\n            id=\"register\"\r\n            minLength={8}\r\n            required\r\n            placeholder=\"Enter username..\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n          <input\r\n            id=\"register\"\r\n            minLength={8}\r\n            required\r\n            placeholder=\"Enter password..\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <input\r\n            id=\"register\"\r\n            minLength={8}\r\n            required\r\n            placeholder=\"Confirm password\"\r\n            value={confirm}\r\n            onChange={(e) => setConfirm(e.target.value)}\r\n          />\r\n        </div>\r\n        <button id=\"register-button\">Register</button>\r\n      </form>\r\n      <p>{error}</p>\r\n    </>\r\n  );\r\n};\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { API_URL } from \"./App\";\r\n\r\nconst NewPost = ({ lstoken }) => {\r\n  const history = useHistory();\r\n  const [title, setTitle] = useState([]);\r\n  const [description, setDescription] = useState([]);\r\n  const [price, setPrice] = useState([]);\r\n  const [location, setLocation] = useState([]);\r\n  const [willDeliver, setWillDeliver] = useState([false]);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const response = await fetch(`${API_URL}/posts`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${lstoken}`,\r\n      },\r\n      body: JSON.stringify({\r\n        post: {\r\n          title,\r\n          description,\r\n          price,\r\n          location,\r\n          willDeliver,\r\n        },\r\n      }),\r\n    });\r\n    const info = await response.json();\r\n\r\n    if (info.error) {\r\n      return setError(info.error.message);\r\n    }\r\n    history.push(\"/posts\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form id=\"new-post-form\" onSubmit={handleSubmit}>\r\n        <h2>New Post</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"What are you selling?\"\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          value={title}\r\n        ></input>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Describe the item (i.e. condition, model)\"\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          value={description}\r\n        ></input>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"What's the price?\"\r\n          onChange={(e) => setPrice(e.target.value)}\r\n          value={price}\r\n        ></input>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Where is the item located?\"\r\n          onChange={(e) => setLocation(e.target.value)}\r\n          value={location}\r\n        ></input>\r\n        <label>\r\n          Are you willing to deliver?\r\n          <select onChange={(e) => setWillDeliver(e.target.value)}>\r\n            <option value={false}>No</option>\r\n            <option value={true}>Yes</option>\r\n          </select>\r\n        </label>\r\n\r\n        <button>Submit</button>\r\n      </form>\r\n      <p>{error}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n","import React from \"react\";\r\nimport {\r\n  useParams,\r\n  useHistory,\r\n} from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { useState } from \"react\";\r\nimport { API_URL } from \"./App\";\r\n\r\nconst PostEdit = ({ posts, lstoken }) => {\r\n  const { id } = useParams();\r\n  const { title, description, price, location, willDeliver } = posts.filter(\r\n    (post) => post._id === id\r\n  )[0];\r\n  const origPost = {\r\n    title: title,\r\n    description: description,\r\n    price: price,\r\n    location: location,\r\n    willDeliver: willDeliver,\r\n  };\r\n  const history = useHistory();\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const [post, setPost] = useState(origPost);\r\n\r\n  //Edit Submit\r\n  const handleSubmitEdit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const response = await fetch(`${API_URL}/posts/${post._id}`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${lstoken}`,\r\n      },\r\n      body: JSON.stringify({\r\n        post: {\r\n          title,\r\n          description,\r\n          price,\r\n          location,\r\n          willDeliver,\r\n        },\r\n      }),\r\n    });\r\n    const info = await response.json();\r\n\r\n    if (info.error) {\r\n      return setError(info.error.message);\r\n    }\r\n    console.log(post.price);\r\n    console.log(\"it works\");\r\n    history.push(\"/posts\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div id=\"edit-form\">\r\n        <form className=\"post-form\" onSubmit={handleSubmitEdit}>\r\n          <div id=\"edit-form-title\">Edit Form</div>\r\n          <input\r\n            value={post.title}\r\n            placeholder=\"Title\"\r\n            onChange={(e) => {\r\n              setPost({ ...post, title: e.target.value });\r\n            }}\r\n          />\r\n          <input\r\n            value={post.description}\r\n            placeholder=\"Description\"\r\n            onChange={(e) => {\r\n              setPost({ ...post, description: e.target.value });\r\n            }}\r\n          />\r\n          <input\r\n            value={post.price}\r\n            placeholder=\"Price\"\r\n            onChange={(e) => {\r\n              setPost({ ...post, price: e.target.value });\r\n            }}\r\n          />\r\n          <input\r\n            value={post.location}\r\n            placeholder=\"Location\"\r\n            onChange={(e) => {\r\n              setPost({ ...post, location: e.target.value });\r\n            }}\r\n          />\r\n          <select\r\n            onChange={(e) => {\r\n              setPost({ ...post, willDeliver: e.target.value });\r\n            }}\r\n          >\r\n            <option value={false}>No</option>\r\n            <option value={true}>Yes</option>\r\n          </select>\r\n          <button>Submit</button>\r\n        </form>\r\n        s\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostEdit;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { API_URL } from \"./App\";\r\n\r\nconst Login = ({ setToken }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const response = await fetch(`${API_URL}/users/login`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        user: {\r\n          username: username,\r\n          password: password,\r\n        },\r\n      }),\r\n    });\r\n    const info = await response.json();\r\n\r\n    if (info.error) {\r\n      setUsername(\"\");\r\n      setPassword(\"\");\r\n      return setError(info.error.message);\r\n    }\r\n    setToken(info.data.token);\r\n    localStorage.setItem(\"token\", info.data.token);\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n    history.push(\"/posts\");\r\n  };\r\n\r\n  return (\r\n    <div id=\"login\">\r\n      <form id=\"Login-form\" onSubmit={handleSubmit}>\r\n        <label>Username</label>\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          placeholder=\"Enter Username\"\r\n          onChange={(event) => setUsername(event.target.value)}\r\n        ></input>\r\n\r\n        <label>Password</label>\r\n        <input\r\n          type=\"text\"\r\n          value={password}\r\n          placeholder=\"Enter Password\"\r\n          onChange={(event) => setPassword(event.target.value)}\r\n        ></input>\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <p>{error}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { API_URL } from \"./App\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Profile = ({ user }) => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setPosts(user.posts);\r\n  }, [user]);\r\n\r\n  const handleSubmitDelete = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const response = await fetch(`${API_URL}/posts/${post._id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${lstoken}`,\r\n      },\r\n    });\r\n    const info = await response.json();\r\n\r\n    if (info.error) {\r\n      return setError(info.error.message);\r\n    }\r\n    history.push(\"/posts\");\r\n  };\r\n  // console.log(\"DATA\", user);\r\n  // console.log(\"POSTS\", user.posts);\r\n  // console.log(\"UserData:\", user);\r\n\r\n  return (\r\n    <div id=\"profile-main\">\r\n      <h1 className=\"page-title\">Your Profile, {user.username}</h1>\r\n      <div className=\"profile-body\">\r\n        {user.messages && user.messages.length ? (\r\n          <div>\r\n            <div id=\"inbox-span\">\r\n              <h3 id=\"inbox\">Inbox ({user.messages.length})</h3>\r\n\r\n              {user.messages.map((message) => {\r\n                return (\r\n                  <div id=\"message\" key={message._id}>\r\n                    <div id=\"post-message\">From Post:{message.post.title}</div>\r\n                    <label id=\"sender\">\r\n                      Sender:{message.fromUser.username}\r\n                    </label>\r\n                    <p id=\"message-content\">{message.content}</p>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <h3>There are no messages to display</h3>\r\n        )}\r\n        {posts && posts.length ? (\r\n          <div id=\"user-posts\">\r\n            <h2>Listings you've created: </h2>\r\n            {posts.map((post) => {\r\n              return (\r\n                <div key={post._id} id=\"profile-posts\">\r\n                  <Link to={`/posts/${post._id}`}>\r\n                    <h4>{post.title}</h4>\r\n                  </Link>\r\n                  <div>\r\n                    <h5>Active: {post.active ? \"true\" : \"false\"}</h5>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <h5>Description:</h5> {post.description}\r\n                  </div>\r\n                  <div>\r\n                    <h5></h5>Location: {post.location}\r\n                  </div>\r\n\r\n                  <button onClick={() => handleSubmitDelete(post._id)}>\r\n                    Delete\r\n                  </button>\r\n                  <Link id=\"send-message\" to={`/posts/edit/${post._id}`}>\r\n                    <button>Edit</button>\r\n                  </Link>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <h2>You haven't created any posts yet.</h2>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { useParams, useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { API_URL } from \"./App\";\r\n\r\nconst MessageForm = ({ posts, lstoken }) => {\r\n  const { id } = useParams();\r\n  const post = posts.find((post) => id === post._id);\r\n  const [content, setContent] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const response = await fetch(`${API_URL}/posts/${post._id}/messages`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${lstoken}`,\r\n      },\r\n      body: JSON.stringify({\r\n        message: {\r\n          content,\r\n        },\r\n      }),\r\n    });\r\n    const info = await response.json();\r\n\r\n    if (info.error) {\r\n      return setError(info.error.message);\r\n    }\r\n    console.log(content);\r\n    history.push(`/profile`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {lstoken ? (\r\n        <div id=\"message-format\">\r\n          <form id=\"message-form\" onSubmit={handleSubmit}>\r\n            <h2>Message Form</h2>\r\n            <label id=\"comment-input\">Message </label>\r\n            <input\r\n              value={content}\r\n              onChange={(e) => {\r\n                setContent(e.target.value);\r\n              }}\r\n              id=\"comment-input\"\r\n            />\r\n            <button>submit</button>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <div> Please login to message other users</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MessageForm;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  useParams,\r\n  useHistory,\r\n} from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport { API_URL } from \"./App\";\r\n\r\nconst PostSingle = ({ posts, lstoken }) => {\r\n  if (posts.length === 0) return <div></div>;\r\n  const { id } = useParams();\r\n  const post = posts.find((post) => id == post._id);\r\n  const history = useHistory();\r\n\r\n  //delete\r\n  const handleSubmitDelete = async (e) => {\r\n    // e.preventDefault();\r\n\r\n    const response = await fetch(`${API_URL}/posts/${post._id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${lstoken}`,\r\n      },\r\n    });\r\n    const info = await response.json();\r\n\r\n    if (info.error) {\r\n      return setError(info.error.message);\r\n    }\r\n    history.push(\"/posts\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div id=\"post-results-box\">\r\n        {post && post.isAuthor ? (\r\n          <div id=\"post-results\">\r\n            <h3 id=\"post-title\">{post.title}</h3>\r\n            <div id=\"post-info\">Active: {post.active ? \"true\" : \"false\"}</div>\r\n            <div id=\"post-info\">Description: {post.description}</div>\r\n            <div id=\"post-info\">Price: {post.price}</div>\r\n            <div id=\"post-info\">Posted by: {post.author.username}</div>\r\n            <div id=\"post-info\">Location: {post.location} </div>\r\n            <button\r\n              id=\"delete\"\r\n              onClick={() => {\r\n                handleSubmitDelete();\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n            <Link id=\"send-message\" to={`/posts/edit/${post._id}`}>\r\n              <button id=\"edit\">Edit</button>\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div id=\"post-results\">\r\n              <h3 id=\"post-title\">{post.title}</h3>\r\n              <div id=\"post-info\">Description: {post.description}</div>\r\n              <div id=\"post-info\">Price: {post.price}</div>\r\n              <div id=\"post-info\">Posted by: {post.author.username}</div>\r\n              <div id=\"post-info\">Location: {post.location} </div>\r\n              <Link id=\"send-message\" to={`message/${post._id}`}>\r\n                <button>Send Message</button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostSingle;\r\n","import React, { useEffect } from \"react\";\r\nimport Home from \"./Home\";\r\nimport Navbar from \"./Navbar\";\r\nimport Posts from \"./Posts\";\r\nimport Register from \"./Register\";\r\nimport NewPost from \"./NewPost\";\r\nimport PostEdit from \"./ToEdit\";\r\nimport Login from \"./Login\";\r\nimport Profile from \"./Profile\";\r\nimport { useState } from \"react\";\r\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\r\nimport MessageForm from \"./Messages\";\r\nimport PostSingle from \"./SinglePost\";\r\n\r\nexport const API_URL =\r\n  \"https://strangers-things.herokuapp.com/api/2110-FTB-ET-WEB-PT\";\r\n\r\nconst App = () => {\r\n  const [userPost, setUserPost] = useState([]);\r\n  const [refreshPosts, setRefreshPost] = useState([]);\r\n  const [posts, setPosts] = useState([]);\r\n  const [token, setToken] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n  const lstoken = localStorage.getItem(\"token\");\r\n\r\n  const fetchUser = async () => {\r\n    const lsToken = localStorage.getItem(\"token\");\r\n    if (lsToken) {\r\n      setToken(lsToken);\r\n    }\r\n\r\n    try {\r\n      const resp = await fetch(`${API_URL}/users/me`, {\r\n        headers: {\r\n          Authorization: `Bearer ${lsToken}`,\r\n        },\r\n      });\r\n      const info = await resp.json();\r\n\r\n      if (info.success) {\r\n        setUser(info.data);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  async function fetchPosts() {\r\n    if (lstoken) {\r\n      const resp = await fetch(`${API_URL}/posts`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${lstoken}`,\r\n        },\r\n      });\r\n      console.log(resp);\r\n      const info = await resp.json();\r\n      setPosts(info.data.posts);\r\n      setRefreshPost(info.data.posts);\r\n      setUserPost(info.data.posts);\r\n    } else {\r\n      const resp = await fetch(`${API_URL}/posts`);\r\n      const info = await resp.json();\r\n      setPosts(info.data.posts);\r\n      setRefreshPost(info.data.posts);\r\n      setUserPost(info.data.posts);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n    fetchPosts();\r\n  }, [token]);\r\n\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <div id=\"container\">\r\n          <div id=\"navbar\">\r\n            {\r\n              <div id=\"navbar-sub\">\r\n                <Navbar\r\n                  user={user}\r\n                  setToken={setToken}\r\n                  setUser={setUser}\r\n                  lstoken={lstoken}\r\n                />\r\n              </div>\r\n            }\r\n          </div>\r\n\r\n          <div id=\"main-section\">\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n\r\n            <Route exact path=\"/posts\">\r\n              <Posts\r\n                posts={posts}\r\n                refreshPosts={refreshPosts}\r\n                setPosts={setPosts}\r\n                token={token}\r\n              />\r\n            </Route>\r\n\r\n            <Route exact path=\"/register\">\r\n              <Register setToken={setToken} />\r\n            </Route>\r\n\r\n            <Route exact path=\"/newpost\">\r\n              <NewPost lstoken={lstoken} />\r\n            </Route>\r\n\r\n            <Route exact path=\"/posts/:id\">\r\n              <PostSingle\r\n                token={token}\r\n                setPosts={setPosts}\r\n                posts={posts}\r\n                lstoken={lstoken}\r\n              />\r\n            </Route>\r\n\r\n            <Route exact path=\"/posts/edit/:id\">\r\n              <PostEdit posts={posts} lstoken={lstoken} />\r\n            </Route>\r\n\r\n            <Route exact path=\"/login\">\r\n              <Login setToken={setToken} />\r\n            </Route>\r\n\r\n            <Route exact path=\"/posts/message/:id\">\r\n              <MessageForm posts={posts} lstoken={lstoken} />\r\n            </Route>\r\n\r\n            <Route exact path=\"/Profile\">\r\n              <Profile\r\n                user={user}\r\n                posts={posts}\r\n                setPosts={setPosts}\r\n                userPost={userPost}\r\n              />\r\n            </Route>\r\n          </div>\r\n        </div>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nconst app = document.getElementById(\"app\");\r\nReactDOM.render(<App />, app);\r\n"],"sourceRoot":""}